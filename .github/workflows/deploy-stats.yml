name: Deploy Statistics

on:
  workflow_call:
    inputs:
      repository:
        description: "github.repository"
        required: true
        type: string
        default: "--"

      project_name:
        description: "github.event.repository.name"
        required: true
        type: string
        default: "--"

      release_number:
        description: "Release number"
        required: true
        type: string
        default: "--"

      version:
        description: "Version"
        required: true
        type: string
        default: "--"

      env:
        description: "Environment type (PROD, UAT)"
        required: true
        type: string
        default: "--"

  workflow_dispatch:
    inputs:
      repository:
        description: "github.repository"
        required: true
        type: string
        default: "--"

      project_name:
        description: "github.event.repository.name"
        required: true
        type: string
        default: "--"

      release_number:
        description: "Release number"
        required: true
        type: string
        default: "--"

      version:
        description: "Version"
        required: true
        type: string
        default: "--"

      env:
        description: "Environment type (PROD, UAT)"
        required: true
        type: string
        default: "--"

jobs:
  stats:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get deployment info
        id: get_deploy
        run: |
          DEPLOYMENTS=$(gh api repos/${{ github.repository }}/deployments)
          echo "deployments=$DEPLOYMENTS" >> $GITHUB_OUTPUT

      - name: Generate report
        run: |
          REPORT_DATA=$(jq -n \
            --arg project_name "${{ inputs.project_name }}" \
            --arg release_number "${{ inputs.release_number }}" \
            --arg version "${{ inputs.version }}" \
            --arg env "${{ inputs.env }}" \
            --arg actor "${{ github.actor }}" \
            --argjson deployments "${{ steps.get_deploy.outputs.deployments }}" \
            '{
              project_name: $project_name,
              release_number: $release_number,
              version: $version,
              environment: $env,
              actor: $actor,
              deployments: $deployments
            }')

          REPORT_FILE="report_${{ inputs.env }}.txt"

          echo "$REPORT_DATA" > $REPORT_FILE

      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: deploy-report-${{ inputs.env }}
          path: report_${{ inputs.env }}.txt
