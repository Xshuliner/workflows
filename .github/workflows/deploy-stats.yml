name: Deploy Statistics

run-name: Deploy Statistics

on:
  workflow_call:
    inputs:
      version:
        description: "Version"
        required: true
        type: string
        default: "--"

      env:
        description: "Environment type (PROD, UAT)"
        required: true
        type: string
        default: "--"

  workflow_dispatch:
    inputs:
      version:
        description: "Version"
        required: true
        type: string
        default: "v0.1.2"

      env:
        description: "Environment type (PROD, UAT)"
        required: true
        type: string
        default: "PROD"

jobs:
  stats:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get deployment info
        id: get_deploy
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "=== [Get deployment info][params] repository: ${{github.repository}} ==="

          DEPLOYMENTS=$(gh api repos/${{ github.repository }}/deployments?state=all)
          echo "deployments=$DEPLOYMENTS" >> $GITHUB_OUTPUT

          echo "=== [Get deployment info][result] DEPLOYMENTS: $DEPLOYMENTS ==="

      - name: Generate report
        run: |
          RELEASE_NUMBER=$(echo ${{ github.ref }} | cut -d '/' -f 4)

          echo "=== [Generate report][params] project_name: ${{github.event.repository.name}} ==="
          echo "=== [Generate report][params] ref_name: ${{github.ref_name}} ==="
          echo "=== [Console Params][params] github_ref: ${{ github.ref }} ==="
          echo "=== [Generate report][params] actor: ${{github.actor}} ==="
          echo "=== [Generate report][params] release_number: $RELEASE_NUMBER ==="
          echo "=== [Generate report][params] version: ${{inputs.version}} ==="
          echo "=== [Generate report][params] env: ${{inputs.env}} ==="

          REPORT_DATA=$(jq -n \
            --arg project_name "${{ github.event.repository.name }}" \
            --arg ref_name "${{ github.ref_name }}" \
            --arg actor "${{ github.actor }}" \
            --arg release_number "$RELEASE_NUMBER" \
            --arg version "${{ inputs.version }}" \
            --arg env "${{ inputs.env }}" \
            --arg last_commit_time "$(git log -1 --format=%cd --date=unix)" \
            --arg deploy_time "$(date -u +%s)" \
            '{
              project_name: $project_name,
              release_number: $release_number,
              version: $version,
              environment: $env,
              actor: $actor,
              last_commit_time: $last_commit_time,
              deploy_time: $deploy_time
            }')

          REPORT_FILE="report_${{ inputs.env }}.txt"

          echo "$REPORT_DATA" > $REPORT_FILE

          echo "=== [Get deployment info][result] REPORT_FILE: report_${{ inputs.env }}.txt ==="

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: deploy-report-${{ inputs.env }}
          path: report_${{ inputs.env }}.txt
