name: Deploy Release

run-name: Deploy Release

on:
  workflow_call:
    inputs:
      version:
        description: "Version"
        required: true
        type: string
        default: "--"

      repository_name:
        description: "Repository name"
        required: false
        type: string
        default: ""

      download_dist_name:
        description: "download dist name"
        required: true
        type: string
        default: "dist"

    # secrets:
    #   QYWX_WEBHOOK:
    #     required: true

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
      - name: Get repository name
        id: repo
        run: |
          if [ -n "${{ inputs.repository_name }}" ]; then
            REPO_NAME="${{ inputs.repository_name }}"
          else
            REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          fi

          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          DOWNLOAD_DIST_NAME="${REPO_NAME}_${TIMESTAMP}"

          echo "zip_name=$DOWNLOAD_DIST_NAME" >> $GITHUB_OUTPUT
      
      - name: Download previous artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.download_dist_name }}
          path: ${{ steps.repo.outputs.zip_name }}/

      - name: Zip dist folder
        run: zip -r ${{ steps.repo.outputs.zip_name }}.zip ${{ steps.repo.outputs.zip_name }}

      - name: Console params
        run: |
          echo "=== [Console params][params] repository_name: ${{ inputs.repository_name }} ==="
          echo "=== [Console params][params] download_dist_name: ${{ inputs.download_dist_name }} ==="
          echo "=== [Console params][outputs] zip_name: ${{ steps.repo.outputs.zip_name }} ==="
          echo "======"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ inputs.version }}
          release_name: ${{ inputs.version }}
          body: |
            ## Release Information

            - **Repository Name**: ${{ steps.repo.outputs.zip_name }}
            - **Version**: ${{ inputs.version }}
            - **Branch**: ${{ github.ref_name }}
            - **Commit**: ${{ github.sha }}
            - **Build Time**: ${{ steps.repo.outputs.zip_name }}
            - **Artifact Name**: ${{ steps.repo.outputs.zip_name }}.zip

            ### Description
            This release was automatically generated by the CI workflow. Please download the attached artifact for the complete build output.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.repo.outputs.zip_name }}.zip
          asset_name: ${{ steps.repo.outputs.zip_name }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    #  - name: Get Release Asset Download URL
    #     id: get_asset_url
    #     uses: actions/github-script@v7
    #     with:
    #       script: |
    #         const { data: assets } = await github.rest.repos.listReleaseAssets({
    #           owner: context.repo.owner,
    #           repo: context.repo.repo,
    #           release_id: ${{ steps.create_release.outputs.id }},
    #         });
    #         const asset = assets.find(a => a.name === '${{ inputs.download_dist_name }}');
    #         if (asset) {
    #           core.setOutput('asset_url', asset.browser_download_url);
    #           console.log('Asset URL:', asset.browser_download_url);
    #         } else {
    #           core.setFailed('Asset not found');
    #         }

    #   - name: Console Url
    #     run: |
    #       TIMESTAMP=$(date +%s)
    #       echo "=== [Console Url]: ${{ steps.get_asset_url.outputs.asset_url }} ==="
