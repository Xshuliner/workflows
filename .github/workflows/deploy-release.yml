name: Deploy Release

run-name: Deploy Release

on:
  workflow_call:
    inputs:
      version:
        description: "Version"
        required: true
        type: string
        default: "--"

      repository_name:
        description: "Repository name"
        required: false
        type: string
        default: ""

      download_dist_name:
        description: "download dist name"
        required: true
        type: string
        default: "dist"

    # secrets:
    #   QYWX_WEBHOOK:
    #     required: true

jobs:
  upload:
    runs-on: ubuntu-latest

    steps:
      - name: Download previous artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.download_dist_name }}
          path: dist/

      - name: Get repository name
        id: repo
        run: |
          if [ -n "${{ inputs.repository_name }}" ]; then
            REPO_NAME="${{ inputs.repository_name }}"
          else
            REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          fi

          echo "repository_name=$REPO_NAME" >> $GITHUB_OUTPUT
          echo "now=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT

      - name: Console params
        run: |
          echo "=== [Console params][params] repository_name: ${{ inputs.repository_name }} ==="
          echo "=== [Console params][params] download_dist_name: ${{ inputs.download_dist_name }} ==="
          echo "=== [Console params][outputs] repository_name: ${{ steps.repo.outputs.repository_name }} ==="
          echo "=== [Console params][outputs] repository_name: ${{ steps.repo.outputs.now }} ==="
          echo "======"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ inputs.version }}
          release_name: ${{ inputs.version }}
          body: ${{ steps.repo.outputs.now }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ steps.create_release.outputs.upload_url }}
          asset_name: ${{ inputs.download_dist_name }}
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Console Url
        run: |
          TIMESTAMP=$(date +%s)
          echo "=== [Console Url]: ${{ steps.repo.outputs.repository_url }}?t=$TIMESTAMP ==="
