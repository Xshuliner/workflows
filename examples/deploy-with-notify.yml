name: Deploy and Notify Example

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      env:
        description: "Environment type"
        required: true
        default: "prod"
        type: choice
        options:
          - prod
          - uat
      notify_platforms:
        description: "Notification platforms"
        required: true
        default: "qywx"
        type: choice
        options:
          - qywx
          - feishu
          - dingtalk
          - teams
          - qywx,feishu
          - qywx,feishu,dingtalk
          - qywx,feishu,dingtalk,teams

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Generate version
        id: version
        run: |
          # 生成版本号（示例）
          VERSION="v$(date +%Y%m%d)-$(git rev-parse --short HEAD)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          
      - name: Deploy to server
        run: |
          echo "部署应用到服务器..."
          # 这里添加实际的部署逻辑
          # 例如：上传到服务器、部署到云平台等
          
      - name: Generate preview URL
        id: preview
        run: |
          # 生成预览URL（示例）
          if [ "${{ github.event.inputs.env || 'prod' }}" = "prod" ]; then
            PREVIEW_URL="https://example.com/${{ github.repository_name }}"
          else
            PREVIEW_URL="https://example.com/${{ github.event.inputs.env || 'prod' }}/${{ github.repository_name }}"
          fi
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT

  notify-success:
    needs: [build, deploy]
    if: success() && (github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch')
    uses: ./.github/workflows/notify-third.yml
    with:
      env: ${{ github.event.inputs.env || 'prod' }}
      version: ${{ needs.build.outputs.version }}
      preview_url: ${{ needs.deploy.outputs.preview_url }}
      project_name: "示例项目"
      third_type: ${{ github.event.inputs.notify_platforms || 'qywx' }}
      status: "success"
    secrets:
      WEBHOOK_QYWX: ${{ secrets.WEBHOOK_QYWX }}
      WEBHOOK_FEISHU: ${{ secrets.WEBHOOK_FEISHU }}
      WEBHOOK_DINGTALK: ${{ secrets.WEBHOOK_DINGTALK }}
      WEBHOOK_TEAMS: ${{ secrets.WEBHOOK_TEAMS }}

  notify-failure:
    needs: [build, deploy]
    if: failure() && (github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch')
    uses: ./.github/workflows/notify-third.yml
    with:
      env: ${{ github.event.inputs.env || 'prod' }}
      version: ${{ needs.build.outputs.version }}
      project_name: "示例项目"
      third_type: ${{ github.event.inputs.notify_platforms || 'qywx' }}
      status: "failure"
    secrets:
      WEBHOOK_QYWX: ${{ secrets.WEBHOOK_QYWX }}
      WEBHOOK_FEISHU: ${{ secrets.WEBHOOK_FEISHU }}
      WEBHOOK_DINGTALK: ${{ secrets.WEBHOOK_DINGTALK }}
      WEBHOOK_TEAMS: ${{ secrets.WEBHOOK_TEAMS }}

  # 开发环境通知示例
  notify-uat:
    needs: build
    if: github.ref == 'refs/heads/develop'
    uses: ./.github/workflows/notify-third.yml
    with:
      env: "uat"
      version: ${{ needs.build.outputs.version }}
      project_name: "示例项目-开发版"
      third_type: "qywx"
      status: "success"
    secrets:
      WEBHOOK_QYWX: ${{ secrets.WEBHOOK_QYWX }}

  # PR通知示例
  notify-pr:
    needs: build
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/notify-third.yml
    with:
      env: "pr"
      version: ${{ needs.build.outputs.version }}
      project_name: "示例项目-PR"
      third_type: "feishu"
      status: "success"
    secrets:
      WEBHOOK_FEISHU: ${{ secrets.WEBHOOK_FEISHU }} 